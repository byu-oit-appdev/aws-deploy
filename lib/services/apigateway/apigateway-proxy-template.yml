---
AWSTemplateFormatVersion: '2010-09-09'

Description: API Gateway Lambda Proxy Template

Parameters:
  ApiName:
    Type: String
    Description: The name of the Lambda function
  LambdaRoleArn:
    Type: String
    Description: The ARN of the role to use for the Lambda
  LambdaRuntime:
    Type: String
    Description: Lambda runtime
    AllowedValues:
    - java8
    - nodejs
    - nodejs4.3
    - nodejs6.10
    - python2.7
    - dotnetcore1.0
  ProvisionedMemory:
    Default: 128
    Type: Number
    Description: The amount of Memory to allocate for the Lambda
    AllowedValues:
    - 128
    - 192
    - 256
    - 320
    - 384
    - 448
    - 512
    - 576
    - 640
    - 704
    - 768
    - 832
    - 896
    - 960
    - 1024
    - 1088
    - 1152
    - 1216
    - 1280
    - 1344
    - 1408
    - 1472
    - 1536
  HandlerFunction:
    Type: String
    Description: The filename.handler-method value in your function. For example,
      "main.handler" would call the handler method defined in main.py.
  FunctionTimeout:
    Default: 3
    Type: String
    Description: Lambda timeout in seconds
  CodeUriS3Bucket:
    Type: String
    Description: The bucket containing the deployable artifact
  CodeUriS3Key:
    Type: String
    Description: The key where the deployable artifact is located in the bucket
  StageName:
    Type: String
    Description: The name of the stage to deploy in API gateway

Resources:
  LambdaFunctionApiEventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      Principal: apigateway.amazonaws.com
      FunctionName:
        Ref: LambdaFunction
      SourceArn:
        Fn::Sub:
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/*/*/*
        - __ApiId__:
            Ref: ServerlessRestApi
  ServerlessRestApiDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ServerlessRestApi
      Description: 'RestApi Deployment'
      StageName:
        Ref: StageName
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: 
          Ref: CodeUriS3Bucket
        S3Key:
          Ref: CodeUriS3Key
      FunctionName:
        Ref: ApiName
      MemorySize:
        Ref: ProvisionedMemory
      {{#if environment_variables}}
      Environment:
        Variables:
          {{#each environment_variables}}
          {{@key}}: {{this}}
          {{/each}}
      {{/if}}
      Handler:
        Ref: HandlerFunction
      Role:
        Ref: LambdaRoleArn
      Timeout:
        Ref: FunctionTimeout
      Runtime:
        Ref: LambdaRuntime
  ServerlessRestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Body:
        info:
          version: '1.0'
          title:
            Ref: ApiName
        paths:
          "/{proxy+}":
            x-amazon-apigateway-any-method:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations
              responses: {}
        swagger: '2.0'

Outputs:
  LambdaArn:
    Value:
      Fn::GetAtt: LambdaFunction.Arn
  RestApiId:
    Value:
      Ref: ServerlessRestApi
  DeploymentId:
    Value:
      Ref: ServerlessRestApiDeployment