---
AWSTemplateFormatVersion: '2010-09-09'
Description: Handel-created S3 bucket

Resources:
  Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      AccessControl: PublicRead
      BucketName: {{bucketName}}
      # TODO - Add CORS Configuration support
      LoggingConfiguration:
        DestinationBucketName: {{loggingBucketName}}
        LogFilePrefix: {{logFilePrefix}}
      VersioningConfiguration: 
        Status: {{versioningStatus}}
      {{#if tags}}
      Tags:
      {{#each tags}}
      - Key: {{@key}}
        Value: {{this}}
      {{/each}}
      {{/if}}
      WebsiteConfiguration:
        IndexDocument: {{indexDocument}}
        ErrorDocument: {{errorDocument}}
  BucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties: 
      Bucket: !Ref Bucket
      PolicyDocument:
        Statement:
        - Effect: Allow
          Principal: '*'
          Action:
          - s3:GetObject
          Resource:
          - 'arn:aws:s3:::{{bucketName}}/*'

  {{#if cloudfront}}
  Cloudfront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: CDN for {{bucketName}}
        {{#if dnsName}}
        Aliases:
         - {{dnsName}}
        {{/if}}
        Enabled: 'true'
        HttpVersion: http2
        {{#if httpsCertificateId}}
        ViewerCertificate:
          AcmCertificateArn: !Sub "arn:aws:acm:us-east-1:${AWS::AccountId}:certificate/{{httpsCertificateId}}"
          SslSupportMethod: sni-only
        {{/if}}
        DefaultCacheBehavior:
          AllowedMethods: [GET, HEAD, OPTIONS]
          Compress: true
          MinTTL: {{cfMinTTL}}
          MaxTTL: {{cfMaxTTL}}
          DefaultTTL: {{cfDefaultTTL}}
          TargetOriginId: only-origin
          ForwardedValues:
            QueryString: true
          {{#if httpsCertificateId}}
          ViewerProtocolPolicy: redirect-to-https
          {{else}}
          ViewerProtocolPolicy: allow-all
          {{/if}}
        DefaultRootObject: {{indexDocument}}
        PriceClass: {{cfPriceClass}}
        Origins:
        # We're using a custom origin instead of an S3 origin to allow for future support of redirects, etc.
        - Id: only-origin
          DomainName: !Select [ 1, !Split [ "://", !GetAtt Bucket.WebsiteURL ] ]
          CustomOriginConfig:
            HTTPPort: 80
            HTTPSPort: 443
            OriginProtocolPolicy: http-only

  {{#if dnsName}}
  DNS:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: {{dnsHostedZoneId}}
      Comment: DNS for CDN
      RecordSets:
        - Name: {{dnsName}}
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt Cloudfront.DomainName
# TODO: Add IPV6 support to CloudFront distro. It'll require a custom resource, since Cloudformation still doesn't support it.
#        - Name: {{dnsName}}
#          Type: AAAA
#          AliasTarget:
#            HostedZoneId: Z2FDTNDATAQYW2
#            DNSName: !GetAtt Cloudfront.DomainName
  {{/if}}
  {{/if}}

Outputs:
  BucketName:
    Description: The name of the bucket
    Value: 
      Ref: Bucket
  {{#if cloudfront}}
  CloudfrontDistribution:
    Description: The Cloudfront Distribution ID
    Value: !Ref Cloudfront
  CloudfrontUrl:
    Description: The Cloudfront domain name
    Value: !GetAtt Cloudfront.DomainName
  {{/if}}
